{"version":3,"sources":["components/ship.js","components/gameBoard.js","App.js","serviceWorker.js","index.js"],"names":["Ship","length","health","sunk","hit","position","this","isSunk","coordRegex","matches","some","e","test","GameBoard","player","passedPlayer","letters","Array","board","i","temp","j","push","drawGrid","fleet","fleetStatus","hits","setShip","x","y","setHit","shipLengthHack","forEach","ship","checkShip","coords","hasFleet","setHitToShip","target","setMiss","recievedAttack","legalShipPlacement","direction","legal","placeShip","end","status","includes","theGame","human","ai","currentPlayer","random","Math","round","aiAttack","number","humanPlay","ex","why","aiPlay","GameLogic","Game","props","state","gameData","endGame","handleButtonClick","bind","window","location","reload","setState","boardArr","targetDivs","document","querySelectorAll","innerHTML","classList","add","checkEndGame","checkAiPlay","className","onClick","data","humanPlayed","React","Component","Board","gameBoard","gridInterface","legalCoord","num","shipRandomizer","directionRandomizer","Xcoord","Ycoord","someValue","value","squareClicked","key","gameGrid","homeArray","shipSquare","aiShipSquare","square","attributes","parentNode","initShips","buildSquares","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9a18db6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Ship(length) {\n    return {\n        length: length,\n        health: [],\n        sunk: \"N\",\n        hit: function(position) {\n            this.health[position] = \"x\";\n            this.isSunk();\n            return\n        },\n        isSunk: function() {\n            let coordRegex = /\\d.\\d/g;\n            let matches = this.health.some(e => coordRegex.test(e));\n            if (matches) {\n                this.sunk = \"N\"\n            } else {\n                this.sunk = \"Y\";\n            }\n        }\n    }\n}\n\nexport default Ship;","import Ship from './ship'\n\nfunction GameBoard(player) {\n    const passedPlayer = player;\n    const letters = new Array(8);\n\n    function drawGrid () {\n        for (let i = 0; i < letters.length; i++) {\n            let temp = []\n            for (let j = 0; j < letters.length; j++) {\n                temp.push(j);\n            }\n            letters[i]=temp;\n        }\n        return letters;\n    }\n\n    function buildFleet () {\n        return [\n            Ship(5),\n            Ship(4),\n            Ship(3),\n            Ship(3),\n            Ship(2),\n        ]      \n    } \n    \n    return {\n        board: drawGrid(),\n        fleet: buildFleet(),\n        player: passedPlayer,\n        fleetStatus: \"Y\",\n        hits: 0,\n\n        // handy helpers\n        setShip: function (x, y) {\n            return this.board[x][y] = \"s\";\n        },\n        setHit: function (x, y) {\n            return this.board[x][y] = \"h\";\n        },\n        shipLengthHack: function () {\n            this.fleet.forEach(function(ship) {\n                ship.health.length = ship.length;\n            })\n        },\n        checkShip: function (coords, ship) {\n            let health = ship.health;\n\n            for (let i=0; i<health.length; i++) {\n                if (health[i] === coords) {\n                    ship.hit(i);\n                    this.shipLengthHack();\n                }\n            }\n            this.hasFleet();\n        },\n        setHitToShip: function (x, y) {\n            // use arr.includes() on refactor\n            let target = `${x},${y}`;\n\n            for (let i=0; i<this.fleet.length; i++) {\n                this.checkShip(target, this.fleet[i]);\n            }\n        },\n        setMiss: function (x, y) {\n            return this.board[x][y] = \"m\"; \n        },\n        test(x, y, letters) {\n            return this.board[x][y] = letters;\n        },\n        recievedAttack: function (x, y) {\n            let target = this.board[x][y];\n            if (target === \"s\") {\n                this.setHit(x, y);\n                this.setHitToShip(x, y);\n            } else if (typeof target === \"number\") {\n                target = this.setMiss(x, y);\n            }\n            return;\n        },\n        //  refactor? \n        legalShipPlacement: function (x, y, direction, ship) {\n            let length = ship.length;\n            if (direction === \"up\") {\n                let legal = true;\n                for (let i = x; i > x - length; i--) {\n                    if (i < 0) {\n                        legal = false;\n                        return legal;\n                    } else if (this.board[i][y] === \"s\") {\n                        legal = false;\n                        return legal;\n                    }\n                }\n                return legal;\n            }\n            if (direction === \"down\") {\n                let legal = true;\n                for (let i = x; i < x + length; i++) {\n                    if (i > 7) {\n                        legal = false;\n                        return legal;\n                    } else if (this.board[i][y] === \"s\") {\n                        legal = false;\n                        return legal;\n                    }\n                }\n                return legal;\n            }\n            if (direction === \"left\") {\n                let legal = true;\n                for (let i = y; i > y - length; i--) {\n                    if (i < 0) {\n                        legal = false;\n                        return legal;\n                    } else if (this.board[x][i] === \"s\") {\n                        legal = false;\n                        return legal;\n                    }\n                }\n                return legal;\n            }\n            if (direction === \"right\") {\n                let legal = true;\n                for (let i = y; i < y + length; i++) {\n                    if (i > 7) {\n                        legal = false;\n                        return legal;\n                    } else if (this.board[x][i] === \"s\") {\n                        legal = false;\n                        return legal;\n                    }\n                }\n                return legal;\n            }\n        },\n\n        placeShip: function (x, y, direction, ship) {\n            let legal = this.legalShipPlacement(x, y, direction, ship)\n            if (legal === false) {\n                return;\n            }\n            if (direction === \"left\") {\n                let end = y - ship.length;\n                for (let i = y; i > end; i--) {\n                    this.setShip(x, i);\n                    ship.health.push(`${x},${i}`)\n                }\n            } else if (direction === \"right\") {\n                let end = y + ship.length;\n                for (let i = y; i < end; i++) {\n                    this.setShip(x, i);\n                    ship.health.push(`${x},${i}`)\n                }\n            } else if (direction === \"up\") {\n                let end = x - ship.length;\n                for (let i = x; i > end; i--) {\n                    this.setShip(i, y);\n                    ship.health.push(`${i},${y}`)\n                }\n            } else if (direction === \"down\") {\n\n                let end = x + ship.length;\n                for (let i = x; i < end; i++) {\n                    this.setShip(i, y);\n                    ship.health.push(`${i},${y}`)\n                }\n            }\n            return;\n        },\n\n        hasFleet: function () {\n            let status = []\n            for (let i = 0; i < this.fleet.length; i++) {\n                status.push(this.fleet[i].sunk);\n            }\n            if (status.includes(\"N\")) {\n                this.fleetStatus = \"Y\"\n            } else {\n                this.fleetStatus = \"N\"\n            }\n        }\n    };\n}\n\nfunction theGame() {\n    return {\n        human: GameBoard(),\n        ai: GameBoard(),\n        currentPlayer: \"human\",\n        random: function() {\n            return Math.round(Math.random() * 10)\n        },\n        aiAttack: function () {\n            let number = this.random()\n            let legalNumber = 0;\n            if (number < 8 && number > -1) {\n                legalNumber = number;\n            } else {\n                legalNumber = this.aiAttack();\n            }\n            return legalNumber;\n        },\n        humanPlay: function (x, y) {\n            this.ai.recievedAttack(x, y);\n\n            let ex = this.aiAttack();\n            let why = this.aiAttack();\n            this.aiPlay(ex, why)\n        },\n        aiPlay: function(x, y) {\n    \n            let target = this.human.board[x][y]; \n            if (target === \"h\") {\n                this.aiPlay(this.aiAttack(), this.aiAttack())\n            } else if (target === \"m\") {\n                this.aiPlay(this.aiAttack(), this.aiAttack())\n            } else {\n            this.human.recievedAttack(x, y)\n            }\n            this.currentPlayer = \"human\";\n        } \n    }\n}\n\nexport default theGame;","import React from 'react';\nimport './App.css';\nimport GameLogic from './components/gameBoard';\n\nconst newGame = GameLogic();\n\n\nconst theGame = GameLogic();\n// To Do:\n\n// spruce up css to make it pretty\n// change game status message and add button to reset on game end\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game />\n    </div>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      gameData: theGame,\n      endGame: \"no way hosea\",\n    }\n    this.handleButtonClick=this.handleButtonClick.bind(this);\n  }\n  handleButtonClick() {\n    window.location.reload();\n  }\n  checkEndGame() {\n    if (this.state.gameData.human.fleetStatus === \"N\") {\n      this.setState({endGame: \"AI Wins!\"});\n    } \n    if (this.state.gameData.ai.fleetStatus === \"N\") {\n      this.setState({endGame: \"You Win!\"});\n    } \n\n  }\n\n  checkAiPlay() {\n    let boardArr = this.state.gameData.human.board;\n    let targetDivs = document.querySelectorAll(\".human .board .square\")   \n\n    for (let i = 0; i < targetDivs.length; i++) {\n      let x = targetDivs[i].innerHTML[0] * 1;\n      let y = targetDivs[i].innerHTML[2] * 1;\n      let row = boardArr[x];\n      let location = row[y];\n      if (location === \"m\") {\n        targetDivs[i].classList.add(\"miss\");\n      } else if (location === \"h\") {\n        targetDivs[i].classList.add(\"hit\")\n      }\n    this.checkEndGame();\n  }\n}\n\n  humanPlayed() {\n    this.state.gameData.aiPlay(this.state.gameData.aiAttack(), this.state.gameData.aiAttack());\n    \n    this.checkEndGame();\n    this.checkAiPlay();\n  }\n  render () {\n    return <div>\n    <div className=\"boards\"> \n      <div className=\"gameStatus\"> \n        <h1> {this.state.endGame} </h1>\n        <button onClick={() => this.handleButtonClick()}> New Game </button>\n       </div>\n      <div className = \"human\">\n        <Board \n          player=\"human\" \n          data={this.state.gameData.human} \n          currentPlayer={this.state.gameData.currentPlayer}\n        />\n      </div>\n      <div className=\"ai\" onClick={() => this.humanPlayed()}> \n        <Board \n          player=\"ai\" \n          data={this.state.gameData.ai}\n          currentPlayer={this.state.gameData.currentPlayer}\n        />\n      </div> \n    </div>\n  </div>\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      player: props.player,\n      gameBoard: props.data,\n      gridInterface: [],\n    }\n  }\n  random() {\n    return Math.round(Math.random() * 10);\n  }\n  legalCoord() {\n      let number = this.random()\n      let legalNumber = 0;\n      if (number < 8 && number > -1) {\n          legalNumber = number;\n      } else {\n          legalNumber = this.legalCoord();\n      }\n      return legalNumber;\n  }\n  shipRandomizer() {\n    return this.legalCoord();\n  }\n  directionRandomizer() {\n    let num = this.legalCoord();\n    if (num <= 1) {\n      return \"right\"\n    } else if (num <= 3) {\n      return \"left\"\n    } else if (num <= 5) {\n      return \"up\"\n    } else if (num <= 7) {\n      return \"down\"\n    } else {\n      return \"right\";\n    }\n  }\n\n  \n  // temporary non-random set up\n  initShips() {\n    let fleet = this.state.gameBoard.fleet;\n    for (let i = 0; i < fleet.length; i++) {\n      while (fleet[i].health.length < 1) {\n        this.state.gameBoard.placeShip(\n          this.shipRandomizer(),\n          this.shipRandomizer(),\n          this.directionRandomizer(), fleet[i])\n      }\n    }\n  }\n\n  square(Xcoord, Ycoord, someValue) {\n    return <div className=\"square\" value={someValue} onClick={(e) => \n      this.squareClicked(e)} \n      key={[Xcoord, Ycoord]} \n      data={[Xcoord,Ycoord]}>\n         {Xcoord} {Ycoord} \n      </div>\n  }\n  shipSquare(Xcoord, Ycoord, someValue) {\n    return <div className=\"square ship\" value={someValue} onClick={(e) => \n      this.squareClicked(e)} \n      key={[Xcoord, Ycoord]} \n      data={[Xcoord,Ycoord]}>\n         {Xcoord} {Ycoord} \n      </div>\n  }\n  aiShipSquare(Xcoord, Ycoord, someValue) {\n    return <div className=\"aiship\" value={someValue} onClick={(e) => \n      this.squareClicked(e)} \n      key={[Xcoord, Ycoord]} \n      data={[Xcoord,Ycoord]}>\n         {Xcoord} {Ycoord} \n      </div>\n  }\n  buildSquares(props) {\n    let gameGrid = []\n    let homeArray = this.state.gameBoard.board;\n    let that = this;\n\n    for (let i = 0; i < homeArray.length; i++) {\n      for (let j = 0; j < homeArray[i].length; j++) {\n        if (homeArray[i][j] === \"s\" && that.state.player === \"human\") {\n          gameGrid.push(this.shipSquare(i, j, homeArray[i][j]));\n          this.state.gridInterface.push(this.shipSquare(i, j, homeArray[i][j]));\n        } else if (homeArray[i][j] === \"s\" && that.state.player === \"ai\") {\n          gameGrid.push(this.aiShipSquare(i, j, homeArray[i][j]))\n          this.state.gridInterface.push(this.aiShipSquare(i, j, homeArray[i][j]));\n        } else {\n        gameGrid.push(this.square(i, j, homeArray[i][j]));\n        this.state.gridInterface.push(this.square(i, j, homeArray[i][j]));\n        }\n      }\n    }\n    return gameGrid;\n  }\n\n  squareClicked(e) {\n    let x = e.target.attributes.data.value[0] * 1;\n    let y = e.target.attributes.data.value[2] * 1;\n\n    // prevents firing onto own board.\n    let boardClicked = e.target.parentNode.parentNode.className;\n      if (boardClicked === \"human\") {\n        return;\n      }\n\n    if (e.target.className === \"ship\") {\n      this.state.gameBoard.recievedAttack(x, y);\n      e.target.className = \"hit\";\n    } else if (e.target.className === \"aiship\") {\n      this.state.gameBoard.recievedAttack(x, y);\n      e.target.className = \"hit\";\n    } else if (e.target.className === \"square\") {\n      this.state.gameBoard.recievedAttack(x, y);\n      e.target.className = \"miss\";\n    } else if (e.target.className === \"hit\") {\n      return;\n    } else if (e.target.className === \"miss\") {\n      return;\n    }\n  }\n\n  render() {\n    return <div className=\"board\" >\n      {this.initShips()}\n      {this.buildSquares(8)}\n     </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}